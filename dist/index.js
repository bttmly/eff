!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.eff=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var arity5;

  module.exports = arity5 = function(fn, n) {
    if (!(n > 0)) {
      n = 0;
    }
    if (n === 0) {
      return function() {
        return fn.call(this);
      };
    } else if (n === 1) {
      return function(a) {
        return fn.apply(this, arguments);
      };
    } else if (n === 2) {
      return function(a, b) {
        return fn.apply(this, arguments);
      };
    } else if (n === 3) {
      return function(a, b, c) {
        return fn.apply(this, arguments);
      };
    } else if (n === 4) {
      return function(a, b, c, d) {
        return fn.apply(this, arguments);
      };
    } else if (n === 5) {
      return function(a, b, c, d, e) {
        return fn.apply(this, arguments);
      };
    } else {
      throw new RangeError("Function must take 5 or fewer arguments");
    }
  };

}).call(this);

},{}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = require("./arity-5");

}).call(this);

},{"./arity-5":1}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var binary, nAry;

  nAry = require("./n-ary");

  module.exports = binary = function(fn) {
    return nAry(fn, 2);
  };

}).call(this);

},{"./n-ary":11}],4:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var arity, curry;

  arity = require("./arity");

  module.exports = curry = function(fn) {
    var arg, curried, i, len, outer, _i, _len;
    len = arguments.length - 1;
    outer = new Array(len);
    for (i = _i = 0, _len = arguments.length; _i < _len; i = ++_i) {
      arg = arguments[i];
      if (i > 0) {
        outer[i - 1] = arg;
      }
    }
    curried = function() {
      var args, j, outerArg, outerLen, _j, _k, _len1, _len2;
      outerLen = outer.length;
      len = arguments.length + outerLen;
      args = new Array(len);
      for (i = _j = 0, _len1 = outer.length; _j < _len1; i = ++_j) {
        outerArg = outer[i];
        args[i] = outerArg;
      }
      for (j = _k = 0, _len2 = arguments.length; _k < _len2; j = ++_k) {
        arg = arguments[j];
        args[outerLen + j] = arg;
      }
      if (args.length >= fn.length) {
        return fn.apply(this, args);
      } else {
        return curry.apply(null, [fn].concat(args));
      }
    };
    return arity(curried, fn.length - len);
  };

}).call(this);

},{"./arity":2}],5:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var arity, demethodize;

  arity = require("./arity");

  module.exports = demethodize = function(fn, newArity) {
    var func;
    func = function(context) {
      var arg, args, i, _i, _len;
      args = new Array(arguments.length - 1);
      for (i = _i = 0, _len = arguments.length; _i < _len; i = ++_i) {
        arg = arguments[i];
        if (i > 0) {
          args[i - 1] = arg;
        }
      }
      return fn.apply(context, args);
    };
    return arity(func, newArity || fn.length + 1);
  };

}).call(this);

},{"./arity":2}],6:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var firstToLast, rotate;

  rotate = require("./rotate");

  module.exports = firstToLast = function(fn) {
    return rotate(fn, 1);
  };

}).call(this);

},{"./rotate":15}],7:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var flip, swap;

  swap = require("./swap");

  module.exports = flip = function(fn) {
    return swap(fn, 0, 1);
  };

}).call(this);

},{"./swap":16}],8:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = {
    curry: require("./curry"),
    arity: require("./arity"),
    nAry: require("./n-ary"),
    unary: require("./unary"),
    binary: require("./binary"),
    swap: require("./swap"),
    flip: require("./flip"),
    reverse: require("./reverse"),
    partial: require("./partial"),
    partialConstructor: require("./partial-constructor"),
    rotate: require("./rotate"),
    firstToLast: require("./first-to-last"),
    lastToFirst: require("./last-to-first"),
    demethodize: require("./demethodize")
  };

}).call(this);

},{"./arity":2,"./binary":3,"./curry":4,"./demethodize":5,"./first-to-last":6,"./flip":7,"./last-to-first":9,"./n-ary":11,"./partial":13,"./partial-constructor":12,"./reverse":14,"./rotate":15,"./swap":16,"./unary":17}],9:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var lastToFirst, rotate;

  rotate = require("./rotate");

  module.exports = lastToFirst = function(fn) {
    return rotate(fn, 1, -1);
  };

}).call(this);

},{"./rotate":15}],10:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var nAry5;

  module.exports = nAry5 = function(fn, n) {
    if (!(n > 0)) {
      n = 0;
    }
    if (n === 0) {
      return function() {
        return fn.call(this);
      };
    } else if (n === 1) {
      return function(a) {
        return fn.call(this, a);
      };
    } else if (n === 2) {
      return function(a, b) {
        return fn.call(this, a, b);
      };
    } else if (n === 3) {
      return function(a, b, c) {
        return fn.call(this, a, b, c);
      };
    } else if (n === 4) {
      return function(a, b, c, d) {
        return fn.call(this, a, b, c, d);
      };
    } else if (n === 5) {
      return function(a, b, c, d, e) {
        return fn.call(this, a, b, c, d, e);
      };
    } else {
      throw new RangeError("Function must take 5 or fewer arguments");
    }
  };

}).call(this);

},{}],11:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = require("./n-ary-5");

}).call(this);

},{"./n-ary-5":10}],12:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var arity, partialConstructor;

  arity = require("./arity");

  module.exports = partialConstructor = function(Ctor) {
    var arg, func, i, len, outer, _i, _len;
    len = arguments.length - 1;
    outer = new Array(len);
    for (i = _i = 0, _len = arguments.length; _i < _len; i = ++_i) {
      arg = arguments[i];
      if (i > 0) {
        outer[i - 1] = arg;
      }
    }
    func = function() {
      var args, obj, outerArg, outerLen, result, _j, _k, _len1, _len2;
      outerLen = outer.length;
      len = arguments.length + outer.length;
      args = new Array(len);
      for (i = _j = 0, _len1 = outer.length; _j < _len1; i = ++_j) {
        outerArg = outer[i];
        args[i] = outerArg;
      }
      for (i = _k = 0, _len2 = arguments.length; _k < _len2; i = ++_k) {
        arg = arguments[i];
        args[outerLen + i] = arg;
      }
      obj = Object.create(Ctor.prototype);
      result = Ctor.apply(obj, args);
      if (result && typeof result === "object" || typeof result === "function") {
        return result;
      } else {
        return obj;
      }
    };
    return arity(func, Ctor.length - outer.length);
  };

}).call(this);

},{"./arity":2}],13:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var arity, partial;

  arity = require("./arity");

  module.exports = partial = function(fn) {
    var arg, func, i, len, outer, _i, _len;
    len = arguments.length - 1;
    outer = new Array(len);
    for (i = _i = 0, _len = arguments.length; _i < _len; i = ++_i) {
      arg = arguments[i];
      if (i > 0) {
        outer[i - 1] = arg;
      }
    }
    func = function() {
      var args, outerArg, outerLen, _j, _k, _len1, _len2;
      outerLen = outer.length;
      len = arguments.length + outer.length;
      args = new Array(len);
      for (i = _j = 0, _len1 = outer.length; _j < _len1; i = ++_j) {
        outerArg = outer[i];
        args[i] = outerArg;
      }
      for (i = _k = 0, _len2 = arguments.length; _k < _len2; i = ++_k) {
        arg = arguments[i];
        args[outerLen + i] = arg;
      }
      return fn.apply(this, args);
    };
    return arity(func, fn.length - outer.length);
  };

}).call(this);

},{"./arity":2}],14:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var arity, reverse;

  arity = require("./arity");

  module.exports = reverse = function(fn) {
    var func;
    func = function() {
      var arg, args, i, len, _i;
      len = arguments.length;
      args = new Array(len);
      for (i = _i = arguments.length - 1; _i >= 0; i = _i += -1) {
        arg = arguments[i];
        args[len - i - 1] = arg;
      }
      return fn.apply(this, args);
    };
    return arity(func, fn.length);
  };

}).call(this);

},{"./arity":2}],15:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var arity, rotate;

  arity = require("./arity");

  module.exports = rotate = function(fn, count, dir) {
    var func;
    if (dir == null) {
      dir = 1;
    }
    if (!(dir === 1 || dir === -1)) {
      throw new RangeError("direction parameter must be 1 or -1");
    }
    func = function() {
      var arg, args, chunk, i, idx, _i, _len;
      args = new Array(arguments.length);
      for (i = _i = 0, _len = arguments.length; _i < _len; i = ++_i) {
        arg = arguments[i];
        args[i] = arg;
      }
      idx = chunk = args.splice((dir === 1 ? 0 : dir * count), count);
      return fn.apply(this, dir === 1 ? args.concat(chunk) : chunk.concat(args));
    };
    return arity(func, fn.length);
  };

}).call(this);

},{"./arity":2}],16:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var arity, swap;

  arity = require("./arity");

  module.exports = swap = function(fn, p1, p2) {
    var func;
    func = function() {
      var a, arg, args, b, i, _i, _len;
      args = new Array(arguments.length);
      for (i = _i = 0, _len = arguments.length; _i < _len; i = ++_i) {
        arg = arguments[i];
        args[i] = arg;
      }
      a = args[p1];
      b = args[p2];
      args[p2] = a;
      args[p1] = b;
      return fn.apply(this, args);
    };
    return arity(func, fn.length);
  };

}).call(this);

},{"./arity":2}],17:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var nAry, unary;

  nAry = require("./n-ary");

  module.exports = unary = function(fn) {
    return nAry(fn, 1);
  };

}).call(this);

},{"./n-ary":11}]},{},[8])(8)
});