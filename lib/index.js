// Generated by CoffeeScript 1.8.0
var decorate, extend, funcs, methods;

funcs = {
  curry: require("./curry"),
  arity: require("./arity"),
  nAry: require("./n-ary"),
  unary: require("./unary"),
  binary: require("./binary"),
  swap: require("./swap"),
  flip: require("./flip"),
  reverse: require("./reverse"),
  partial: require("./partial"),
  partialConstructor: require("./partial-constructor"),
  rotate: require("./rotate"),
  firstToLast: require("./first-to-last"),
  lastToFirst: require("./last-to-first"),
  demethodize: require("./demethodize"),
  copy: require("./copy")
};

methods = {};

Object.keys(funcs).forEach(function(key) {
  return methods[key] = function() {
    var arg, args, i, _i, _len;
    args = new Array(arguments.length + 1);
    args[0] = this;
    for (i = _i = 0, _len = arguments.length; _i < _len; i = ++_i) {
      arg = arguments[i];
      args[i + 1] = arg;
    }
    return funcs[key].apply(null, args);
  };
});

extend = function(target, source) {
  var key;
  for (key in source) {
    target[key] = source[key];
  }
  return target;
};

decorate = function(fn) {
  return extend(fn, methods);
};

module.exports = extend(decorate, funcs);
